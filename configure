#!/bin/bash
# Ricardo L. Gon√ßalves 2021/01 
#
# Simple is better. 
#

#Debug script
#set -xv

# Defaults
LUA="luajit"
DEBUG=""
MEM=""
CC="/usr/bin/gcc"
#CC=$(which gcc clang | tail -n1)
OPTS="-Wno-format"
#OPTS="-std=c11 -pedantic -Wpedantic"

# pharsing parameters
while [ 1 ] ; do
   PAR="$1"

   case "X$PAR" in
   
     "X")
       echo "Fim dos parametros: [$1 $2 $3]"
       break
       ;;
     
     "X--help" | "X-h" | "X-help")
       echo "Syntax:"
       echo "./configure <parameters> <extra (gcc/clang) parameters>"
       echo ""
       echo "Parameters:"
       echo " -h,-help,--help  - This help message."
       echo " -c,--compiler [gcc|clang|mingw]  - Select compiler."
       echo " -d,--debug  - Enable debug mode."
       echo " --no-debug - Disable debug mode."
       echo " -l,--lua [luajit|lua51|lua53]  - Select LUA version."
       echo " -m,--mem # Debug memory leak (sanitizer)."
       echo " --no-mem  - Disable sanitizer memory leak debug."
       echo ""
       echo " * Note: all gcc and clang parameters are supported."
       exit 0
       ;;
     
     "X--lua" | "X-l")
		   echo PAR:$PAR
       shift
       LUA=$1
       echo LUA=$LUA
       ;;
     
     "X--mem" | "X-m")
		  echo PAR:$PAR
       shift
       MEM="-fsanitize=address -fno-omit-frame-pointer -O3"
       #ASAN_OPTIONS=strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1
       #DEBUG="-g -fsanitize=address -fno-omit-frame-pointer -fsanitize-address-use-after-scope -O3"
       ;;
     
     "X--no-mem") 
		  echo PAR:$PAR
       shift
       MEM=""
       ;;
     
     "X--debug" | "X-d")
		  echo PAR:$PAR
       shift
       DEBUG="-g"
       ;;
     
     "X--no-debug")
		  echo PAR:$PAR
       shift
       DEBUG=""
       ;;
     
     "X--compiler" | "X-c")
		  echo PAR:$PAR
       shift
       if [ "X$(echo $1 | grep mingw)" != "X" ] ; then
          echo CROSS PARAMS
          CC=/usr/bin/x86_64-w64-mingw32-gcc
          INCLUDES="-I WINLIBS/mingw64/include -I WINLIBS/SDL2-2.0.16/x86_64-w64-mingw32/include -I WINLIBS/SDL2-2.0.16/x86_64-w64-mingw32/include/SDL2 -I WINLIBS/SDL2_image-2.0.5/x86_64-w64-mingw32/include -I WINLIBS/SDL2_mixer-2.0.4/x86_64-w64-mingw32/include -I WINLIBS/SDL2_ttf-2.0.15/x86_64-w64-mingw32/include"
          LIBS="-pthread -mwindows -lmingw32 -lSDL2main -lSDL2 -lSDL2_image -lSDL2_ttf -lSDL2_mixer -lm -g -L WINLIBS/SDL2-2.0.16/x86_64-w64-mingw32/lib -L WINLIBS/SDL2-2.0.16/x86_64-w64-mingw32/lib -L WINLIBS/SDL2_image-2.0.5/x86_64-w64-mingw32/lib -L WINLIBS/SDL2_image-2.0.5/x86_64-w64-mingw32/lib -L WINLIBS/SDL2_mixer-2.0.4/x86_64-w64-mingw32/lib -L WINLIBS/SDL2_mixer-2.0.4/x86_64-w64-mingw32/lib -L WINLIBS/SDL2_ttf-2.0.15/x86_64-w64-mingw32/lib -L WINLIBS/SDL2_ttf-2.0.15/x86_64-w64-mingw32/lib -W WINLIBS/lua51.dll"
          cd WINLIBS
          ./configcross.sh
          cd ../
       else
         CC=$(which gcc clang | grep $1)
       fi
       ;;

       *)
         echo "PAR:$PAR"
         ;;
   
   esac
   
   shift
	 echo shift... 

done

if [ "X$(echo $CC|grep mingw)" == "X" ] ; then
echo LINUX COMPILE

echo escolhe LUA: $LUA

if [ $LUA == "luajit" ]; then
  INCLUDES="-I /usr/include/luajit-2.1/"
  PLIBS=$LUA
fi
if [ $LUA == "lua51" ]; then
  INCLUDES="-I /usr/include/lua5.1/"
  PLIBS=$LUA
fi
if [ $LUA == "lua53" ]; then
  INCLUDES="-I /usr/include/lua5.3/"
  PLIBS=$LUA
fi

PLIBS="$PLIBS sdl2 SDL2_image SDL2_ttf SDL2_mixer"

echo CC=$CC
echo CFLAGS= $(pkg-config --cflags $PLIBS) $DEBUG $MEM $INCLUDES
echo LIBS=-pthread $(pkg-config --libs $PLIBS) -lm $DEBUG $MEM $LIBS 

cat<<EOF>config.mk
CC=$CC
CFLAGS= $(pkg-config --cflags $PLIBS) $DEBUG $MEM $INCLUDES
LIBS=-pthread $(pkg-config --libs $PLIBS) -lm $DEBUG $MEM $LIBS 
EOF

else

echo CROSS COMPILES MINGW

cat<<EOF>config.mk
CC=$CC
CFLAGS= $INCLUDES
LIBS=-pthread -lm $LIBS 
EOF

fi

make clean

